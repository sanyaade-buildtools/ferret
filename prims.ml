(* ferret prims
 *
 * copyright (c) 2012 by jeffrey massung
 * all rights reserved
 *
 * prims.ml
 *)

open Cell

(* leave ferret *)
let prim_bye st = exit 0

(* primitives *)
let prims =
  [ ("bye",prim_bye)

    (* kernel prims *)
  ; ("modules",Core.prim_modules)
  ; ("abort",Core.prim_abort)
  ; ("clear",Core.prim_clear)
  ; ("dup",Core.prim_dup)
  ; ("drop",Core.prim_drop)
  ; ("swap",Core.prim_swap)
  ; ("over",Core.prim_over)
  ; ("push",Core.prim_push)
  ; ("pop",Core.prim_pop)
  ; ("get",Core.prim_get)
  ; ("put",Core.prim_put)
  ; ("apply",Core.prim_apply)
  ; ("try",Core.prim_try)
  ; ("do",Core.prim_do)
  ; ("lift",Core.prim_lift)
  ; ("i",Core.prim_i)

    (* list prims *)
  ; (",",Core.prim_cons)
  ; ("uncons",Core.prim_uncons)
  ; ("null",Core.prim_null)
  ; ("len",Core.prim_len)
  ; ("rev",Core.prim_rev)
  ; ("hd",Core.prim_hd)
  ; ("tl",Core.prim_tl)

  (*
    (* pair prims *)
  ; ("@",Core.prim_pair)
  ; ("fst",Core.prim_fst)
  ; ("snd",Core.prim_snd)
  *)

    (* process prims *)
  ; ("spawn",Core.prim_spawn)
  ; ("self",Core.prim_self)
  ; ("kill",Core.prim_kill)
  ; ("status",Core.prim_status)
  ; ("join",Core.prim_join)
  ; ("sleep",Core.prim_sleep)
  ; ("yield",Core.prim_yield)
  ; ("!",Core.prim_send)
  ; ("receive",Core.prim_receive)
(*
    (* io prims *)
  ; ("file",Io.prim_file) 
  ; ("url",Io.prim_url)
  ; ("input",Io.prim_input)
  ; ("print",Io.prim_print print_endline)
  ; ("prin",Io.prim_print print_string)
  ; ("prerr",Io.prim_print prerr_endline)
  ; ("cr",Io.prim_princ '\n')
  ; ("lf",Io.prim_princ '\r')
  ; ("tab",Io.prim_princ '\t')
  ; ("space",Io.prim_princ ' ')
  ; ("read",Io.prim_read)
  ; ("load",Io.prim_load)
    
    (* math prims *)
  ; ("=",Math.prim_eq)
  ; ("<>",Math.prim_ne)
  ; ("<",Math.prim_lt)
  ; (">",Math.prim_gt)
  ; ("<=",Math.prim_le)
  ; (">=",Math.prim_ge)
  ; ("+",Math.prim_plus)
  ; ("-",Math.prim_minus)
  ; ("*",Math.prim_times)
  ; ("/",Math.prim_divide)
  ; ("//",Math.prim_div)
  ; ("**",Math.prim_pow)
  ; ("mod",Math.prim_mod)
  ; ("abs",Math.prim_abs)
  ; ("neg",Math.prim_neg)
  ; ("lnot",Math.prim_lnot)
  ; ("land",Math.prim_land)
  ; ("lor",Math.prim_lor)
  ; ("lxor",Math.prim_lxor)
  ; ("lsl",Math.prim_lsl)
  ; ("lsr",Math.prim_lsr)
  ; ("asr",Math.prim_asr)
  ; ("sqrt",Math.prim_sqrt)
  ; ("exp",Math.prim_exp)
  ; ("log",Math.prim_log)
  ; ("log10",Math.prim_log10)
  ; ("sin",Math.prim_sin)
  ; ("cos",Math.prim_cos)
  ; ("tan",Math.prim_tan)
  ; ("asin",Math.prim_asin)
  ; ("acos",Math.prim_acos)
  ; ("atan",Math.prim_atan)
  ; ("sinh",Math.prim_sinh)
  ; ("cosh",Math.prim_cosh)
  ; ("tanh",Math.prim_tanh)
  ; ("ceil",Math.prim_ceil)
  ; ("floor",Math.prim_floor)
  ; ("truncate",Math.prim_truncate)
  ; ("float",Math.prim_float)
  ; ("zero?",Math.prim_zero)
  ; ("epsilon",Math.prim_epsilon)
  ; ("max-int",Math.prim_max_int)
  ; ("min-int",Math.prim_min_int)
  ; ("max-float",Math.prim_max_float)
  ; ("min-float",Math.prim_min_float)
  ; ("uniform",Math.prim_uniform)
  ; ("random",Math.prim_random)
  ; ("choice",Math.prim_choice)

    (* date/time prims *)
  ; ("clock",Time.prim_clock)

    (* string prims *)
  ; ("mold",Strings.prim_mold)
  ; ("form",Strings.prim_form)
  ; ("&",Strings.prim_strcat)
  ; ("&&",Strings.prim_strcat_space)
  ; ("toupper",Strings.prim_uppercase)
  ; ("tolower",Strings.prim_lowercase)
  ; ("sub",Strings.prim_sub)
*)
  ]

